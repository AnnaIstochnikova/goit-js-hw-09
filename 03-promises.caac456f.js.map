{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAOF,SAASC,cAAc,gBAC9BE,EAASH,SAASC,cAAc,WAChCG,EAAYJ,SAASC,cAAc,mBAEzC,IAAII,EAAa,EACbC,EAAiB,EACjBC,EAAc,EAWlB,SAASC,EAAcC,GACrB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,6CAERC,EAAO,yCAAyC,GAEjDN,EAAM,G,CAkCbL,EAAUa,iBAAiB,SArD3B,SAAuBC,GACrBA,EAAEC,iBAEFd,EAAae,SAASrB,EAAWsB,OACjCf,EAAiBc,SAASlB,EAAKmB,OAC/Bd,EAAca,SAASjB,EAAOkB,OAkBhC,WACE,MAAMC,EAAa,GAEnB,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAagB,IAAK,CACrC,MAAMC,EAAenB,GAAckB,EAAI,GAAKjB,EAC5CgB,EAAWG,KAAK,CACdC,QAASlB,EAAc,kBAAkBe,KACzCd,MAAOe,G,CAIXX,QAAQc,WAAWL,EAAWM,KAAIC,GAAKA,EAAEH,WAAUI,MAAKC,IACtDA,EAAQC,SAAQ,CAACC,EAAQC,KACD,cAAlBD,EAAOE,OACTnB,YAAW,KACToB,EAAAvC,GAASwC,OAAOC,QACd,qBAAqBJ,EAAQ,QAAQZ,EAAWY,GAAOzB,UACxD,GACAa,EAAWY,GAAOzB,OAErBO,YAAW,KACToB,EAAAvC,GAASwC,OAAOE,QACd,oBAAoBL,EAAQ,QAAQZ,EAAWY,GAAOzB,UACvD,GACAa,EAAWY,GAAOzB,MAAM,GAE7B,G,CA3CJ+B,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('.delay');\nconst step = document.querySelector('.delay--step');\nconst amount = document.querySelector('.amount');\nconst submitBtn = document.querySelector('.button--submit');\n\nlet delayValue = 0;\nlet delayStepValue = 0;\nlet amountValue = 0;\n\nfunction valueFromUser(e) {\n  e.preventDefault();\n\n  delayValue = parseInt(delayInput.value);\n  delayStepValue = parseInt(step.value);\n  amountValue = parseInt(amount.value);\n  createPromises();\n}\n\nfunction createPromise(delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Success! Value passed to resolve function');\n      } else {\n        reject('Error! Error passed to reject function');\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises() {\n  const promiseArr = [];\n\n  for (let i = 1; i <= amountValue; i++) {\n    const promiseDelay = delayValue + (i - 1) * delayStepValue;\n    promiseArr.push({\n      promise: createPromise(`Promise number ${i}`, promiseDelay),\n      delay: promiseDelay,\n    });\n  }\n\n  Promise.allSettled(promiseArr.map(p => p.promise)).then(results => {\n    results.forEach((result, index) => {\n      if (result.status === 'fulfilled') {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${index + 1} in ${promiseArr[index].delay}ms`\n          );\n        }, promiseArr[index].delay);\n      } else {\n        setTimeout(() => {\n          Notiflix.Notify.failure(\n            `Rejected promise ${index + 1} in ${promiseArr[index].delay}ms`\n          );\n        }, promiseArr[index].delay);\n      }\n    });\n  });\n}\n\nsubmitBtn.addEventListener('click', valueFromUser);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$delayStepValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$createPromise","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","parseInt","value","promiseArr","i","promiseDelay","push","promise","allSettled","map","p","then","results","forEach","result","index","status","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.caac456f.js.map"}