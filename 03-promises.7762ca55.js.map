{"mappings":"AAEA,MAAMA,EAAaC,SAASC,cAAc,UACpCC,EAAOF,SAASC,cAAc,gBAC9BE,EAASH,SAASC,cAAc,WAChCG,EAAYJ,SAASC,cAAc,mBAC5BD,SAASC,cAAc,SAEpC,IAAII,EAAa,EACbC,EAAiB,EACjBC,EAAc,EAWlB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,6CAERC,EAAO,yCAAyC,GAEjDN,EAAM,G,CA4BbN,EAAUc,iBAAiB,SA/C3B,SAAuBC,GACrBA,EAAEC,iBAEFf,EAAagB,SAAStB,EAAWuB,OACjChB,EAAiBe,SAASnB,EAAKoB,OAC/Bf,EAAcc,SAASlB,EAAOmB,OAkBhC,WACE,MAAMC,EAAa,GAEnB,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAaiB,IAAK,CACrC,MAAMC,EAAepB,GAAcmB,EAAI,GAAKlB,EAC5CiB,EAAWG,KAAK,CACdC,QAASnB,EAAc,kBAAkBgB,IAAKC,GAC9Cf,MAAOe,G,CAIXX,QAAQc,WAAWL,EAAWM,KAAIC,GAAKA,EAAEH,WAAUI,MAAKC,IACtDA,EAAQC,SAAQ,CAACC,EAAQC,KACD,cAAlBD,EAAOE,OACTC,QAAQC,IACN,uBAAqBH,EAAS,QAASZ,EAAEY,GAAgBzB,WAG3D2B,QAAQC,IAAI,sBAAoBH,EAAO,IAAK,GAE9C,G,CArCJI,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nconst delayInput = document.querySelector('.delay');\nconst step = document.querySelector('.delay--step');\nconst amount = document.querySelector('.amount');\nconst submitBtn = document.querySelector('.button--submit');\nconst form = document.querySelector('.form');\n\nlet delayValue = 0;\nlet delayStepValue = 0;\nlet amountValue = 0;\n\nfunction valueFromUser(e) {\n  e.preventDefault();\n\n  delayValue = parseInt(delayInput.value);\n  delayStepValue = parseInt(step.value);\n  amountValue = parseInt(amount.value);\n  createPromises();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Success! Value passed to resolve function');\n      } else {\n        reject('Error! Error passed to reject function');\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises() {\n  const promiseArr = [];\n\n  for (let i = 1; i <= amountValue; i++) {\n    const promiseDelay = delayValue + (i - 1) * delayStepValue;\n    promiseArr.push({\n      promise: createPromise(`Promise number ${i}`, promiseDelay),\n      delay: promiseDelay,\n    });\n  }\n\n  Promise.allSettled(promiseArr.map(p => p.promise)).then(results => {\n    results.forEach((result, index) => {\n      if (result.status === 'fulfilled') {\n        console.log(\n          `✅ Fulfilled promise ${index + 1} in ${promiseArr[index].delay}ms`\n        );\n      } else {\n        console.log(`❌ Rejected promise ${index + 1}`);\n      }\n    });\n  });\n}\n\nsubmitBtn.addEventListener('click', valueFromUser);\n"],"names":["$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$delayStepValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","parseInt","value","promiseArr","i","promiseDelay","push","promise","allSettled","map","p","then","results","forEach","result","index","status","console","log","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.7762ca55.js.map"}