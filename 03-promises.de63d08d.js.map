{"mappings":"YAAA,aAEA,IAAMA,EAAaC,SAASC,cAAc,UACpCC,EAAOF,SAASC,cAAc,gBAC9BE,EAASH,SAASC,cAAc,WAChCG,EAAYJ,SAASC,cAAc,mBAGrCI,GAFSL,SAASC,cAAc,SAEnB,GACbK,EAAiB,EACjBC,EAAc,EAclB,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GAItC,OAHAC,QAAQC,IAAI,SAAUV,GACtBS,QAAQC,IAAI,cAAeT,GAC3BQ,QAAQC,IAAI,UAAWR,GAChB,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLR,EACFM,EAAQ,6CAERC,EAAO,yC,GAERb,E,IAhBPD,EAAUgB,iBAAiB,SAT3B,SAAuBC,GACrBA,EAAEC,iBAEFjB,EAAakB,SAASxB,EAAWyB,OACjClB,EAAiBiB,SAASrB,EAAKsB,OAC/BjB,EAAcgB,SAASpB,EAAOqB,OAC9BhB,G,IAIFJ,EAAUgB,iBAAiB,SAAUZ,GAoBrC,IAFA,IAAMiB,EAAa,GAEVC,EAAI,EAAGA,GAAKnB,EAAamB,IAChCD,EAAWE,KAAKnB,EAAc,kBAAoBoB,OAAFF,KAGlDV,QAAQa,WAAWJ,GAChBK,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBI,QAAQC,IAAI,uBAAwCa,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAE3DsB,OAAM,SAAAD,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBI,QAAQC,IAAI,sBAAqCa,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nconst delayInput = document.querySelector('.delay');\nconst step = document.querySelector('.delay--step');\nconst amount = document.querySelector('.amount');\nconst submitBtn = document.querySelector('.button--submit');\nconst form = document.querySelector('.form');\n\nlet delayValue = 0;\nlet delayStepValue = 0;\nlet amountValue = 0;\n\nfunction valueFromUser(e) {\n  e.preventDefault();\n\n  delayValue = parseInt(delayInput.value);\n  delayStepValue = parseInt(step.value);\n  amountValue = parseInt(amount.value);\n  createPromise();\n}\n\nsubmitBtn.addEventListener('click', valueFromUser);\nsubmitBtn.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  delay = delayValue;\n  const shouldResolve = Math.random() > 0.3;\n  console.log('Delay:', delayValue);\n  console.log('Delay Step:', delayStepValue);\n  console.log('Amount:', amountValue);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Success! Value passed to resolve function');\n      } else {\n        reject('Error! Error passed to reject function');\n      }\n    }, delayValue);\n  });\n}\nconst promiseArr = [];\n\nfor (let i = 1; i <= amountValue; i++) {\n  promiseArr.push(createPromise(`Promise number ${i}`, i * 100));\n}\n\nPromise.allSettled(promiseArr)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   console.log(position);\n//   console.log(delay);\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve('Success! Value passed to resolve function');\n//       } else {\n//         reject('Error! Error passed to reject function');\n//       }\n//     }, getInputValue);\n//   });\n// }\n\n// console.log(createPromise(2, 6));\n"],"names":["$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$delayStepValue","$ce04d3a99e08e73b$var$amountValue","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","parseInt","value","$ce04d3a99e08e73b$var$promiseArr","$ce04d3a99e08e73b$var$i","push","concat","allSettled","then","param","catch"],"version":3,"file":"03-promises.de63d08d.js.map"}